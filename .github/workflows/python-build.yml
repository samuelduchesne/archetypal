name: Python Build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: [3.7, 3.8]
        ep-version: [9.2.0, 9.4.0]
        include:
         - ep-version: 9.2.0
           ep-sha: 921312fa1d
           ep-install: 9-2-0
         - ep-version: 9.4.0
           ep-sha: 998c4b761e
           ep-install: 9-4-0
    
    steps:
      - name: Install builder
        run: |
          set -e
          uname -a
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential python-dev protobuf-compiler libprotobuf-dev libtokyocabinet-dev python-psycopg2 libgeos-dev libgdal-dev libspatialindex-dev cmake
      
      - uses: actions/checkout@v2
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        id: cache
        with:
          path: .cache/wheels
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Build Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install --upgrade pip
          pip install wheel
          pip wheel --wheel-dir=.cache/wheels -r requirements.txt
      - name: Install Dependencies
        run: |
          pip install --no-index --find-links=.cache/wheels -r requirements.txt
      - name: Install EnergyPlus
        env:
          ENERGYPLUS_VERSION: ${{ matrix.ep-version }}
          ENERGYPLUS_SHA: ${{ matrix.ep-sha }}
          ENERGYPLUS_INSTALL_VERSION: ${{ matrix.ep-install }}
          OS_NAME: ${{ matrix.os }}
        run: sh ./install_energyplus.sh
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pip install pytest
          pytest
