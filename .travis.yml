language: python
env:
  global:
  - ARCHETYPAL_INTEGRATION=True ENERGYPLUS_VERSION=9.2.0 ENERGYPLUS_SHA=921312fa1d
    ENERGYPLUS_INSTALL_VERSION=9-2-0 MINICONDA_VERSION=latest
addons:
  apt:
    packages:
    - wine
    - libgfortran3
jobs:
  include:
    - name: Python 3.8 on Xenial Linux
      python: 3.8           # this works for Linux but is ignored on macOS or Windows
      env: MINICONDA_OS=Linux
    - name: Python 3.8 on macOS
      os: osx
      osx_image: xcode11.2
      language: objective-c
      env: PYENV_VERSION=3.8; MINICONDA_OS=MacOSX
    - name: "Python 3.8 on Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell       # 'language: python' is an error on Travis CI Windows
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH; MINICONDA_OS=Windows
    - stage: deploy
      script: echo "Deploying to PyPi and GitHub releases ..."
      deploy:
      - provider: pypi
        user: samueld
        password:
          secure: ULsmo10liyAUeo3zh6gz8ORuYsg39kMt07uGz4x8YHAAg/d21tXv23H3R7NKUKqoNlcPPPlQXNOZD7lrKvpUSdHlth8xTunrABxjYNcvaFD0eQolV3N3XPP+ePHftNCz3hm65aKh014DdwueWISFsOun0S16jlhJkak7yRJ5zWEKC/9kIhh/iH6DToMWCLc/o5wNT7b7G2OKvojXbotkyh1GiTgSgIVHYEOPVlKUsUsifvu9wvWuf2u3ymbEKLDTKoUDyjaao8Gs1H7Wms0BB0UjjQquJnbwJjB5bx4gDp7HytoLOdzanfdt3zykgx6K5+dq0533vOUTCFWeedLknwt6HUrqXSGOYQxQwoTmHjDrmpgG+Rw8zHoGhCzGtQ0co6JYrSpdnbjv98xJkPKKanam/WkZ+SQIzDgBzFn4S4fa9hJsM/qkgxuY9r4FUA5WFaMRwOQ3NW52hj9WYJ7bjDRmh9XjAbHnyYvgS1B/9Q21GurgT9B1C9uKQ70vzKmIC8jrYeSPTOVNE4MN3hptFjIgHVFP5Va/xcLSbkFnX1oDmCMm0eKaemjABBMboy9k2Wc+rPGhCksyWom4v7Mm6i042MB7IEowCC4toYvkoXZCOtdKjzG4nsKccTf2xBYM+f8NT4H/TIfRI60NE8wKTEHzq2YaTRHYX2aYMYA4JKc=
        on:
          tags: false
          distributions: sdist bdist_wheel
          repo: samuelduchesne/archetypal
          branch: release/v1.2.7
        skip_cleanup: true
      - provider: releases
        api_key:
          secure: T0s3DtR5Gqnw7tMIC82Pn/pqWYwF5IJ1sppX2E+VqgJnZ37g59qFDK2g53e4PgXqkoNb5VhO54wYu/v8pms8LOtH9DYq/OsERAw0vr/qlJRIe78qFI+RaWdLS6lXE4K3fN7au+yqSpxmWmeZFq0k9BkiX7tWcNxsykcVCsI/MYziMbJD6mku1KSr9+/dYQO/XqARDOK8+faPE0jJrE6aBBMJa27c6jmoZsvnsgRL4tx73f8hsW2HXh2mmpBvsBcKi0FG9XwSjmLF/vL4pad0rF2XSdsCHwoVHzFfdUIi3Iu6FKsUTy6pxtOA/TMPdJ6xRzP/snURX1UAAIRWy+hg+bt2VsGcsCndWY78DGKHO3xolRIdc6JoOh+qRwcQyJfJVC1MjTyFhyhdgpZzhdqDp4bomatwGEyWtRU6L7MDIbhv3wiui28Jdfyw++ftxVa+JqOJRJ0MNDF9XBa+cze/os4MvHcrCFg7HBasdnqUSVz/exmPVBVsYIQWcgOQGbAFguXgCOf6N02wg1NHW9qWGbk+MMgv8sE3spBMZAnY/9Ll5dfXYHwEipnLYRIAN87fR64fKtkdY6/rxQMAY/qQzvPO9WSPHGOMDanywryctX5Ki+L0H8fXMpuwZhYMb85sJlEiIUo2/LCmD76gCqGj+pt8jigH2y9W76XU6EENEjc=
        file_glob: true
        file:
          - dist/*.whl
          - dist/*.tar.gz
        on:
          repo: samuelduchesne/archetypal
          branch: release/v1.2.7
        skip_cleanup: true
before_install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then EXT=dmg; PLATFORM=Darwin; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then EXT=sh; PLATFORM=Linux; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then EXT=exe; PLATFORM=Windows; fi
- ENERGYPLUS_DOWNLOAD_BASE_URL=https://github.com/NREL/EnergyPlus/releases/download/v$ENERGYPLUS_VERSION
- ENERGYPLUS_DOWNLOAD_FILENAME=EnergyPlus-$ENERGYPLUS_VERSION-$ENERGYPLUS_SHA-$PLATFORM-x86_64
- ENERGYPLUS_DOWNLOAD_URL=$ENERGYPLUS_DOWNLOAD_BASE_URL/$ENERGYPLUS_DOWNLOAD_FILENAME.$EXT
- echo $ENERGYPLUS_DOWNLOAD_URL
- curl -SL $ENERGYPLUS_DOWNLOAD_URL -o $ENERGYPLUS_DOWNLOAD_FILENAME.$EXT
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ATTCHBASE=97; ATTCHNUM=8230; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ATTCHBASE=98; ATTCHNUM=8232; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then ATTCHBASE=86; ATTCHNUM=8231; fi
- EXTRAS_DOWNLOAD_URL=http://energyplus.helpserve.com/Knowledgebase/Article/GetAttachment/$ATTCHBASE/$ATTCHNUM
- curl -SL $EXTRAS_DOWNLOAD_URL -o $ATTCHNUM.zip
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo chmod +x $ENERGYPLUS_DOWNLOAD_FILENAME.$EXT;
  echo "y\r" | sudo ./$ENERGYPLUS_DOWNLOAD_FILENAME.$EXT; sudo tar zxvf $ATTCHNUM.zip
  -C /usr/local/EnergyPlus-$ENERGYPLUS_INSTALL_VERSION/PreProcess/IDFVersionUpdater;
  sudo chmod -R a+rwx /usr/local/EnergyPlus-$ENERGYPLUS_INSTALL_VERSION/PreProcess/IDFVersionUpdater;
  sudo chmod -R a+rwx /usr/local/EnergyPlus-$ENERGYPLUS_INSTALL_VERSION/ExampleFiles; sudo rm
  $ENERGYPLUS_DOWNLOAD_FILENAME.$EXT;
  sudo rm $ATTCHNUM.zip;
  fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then curl -SLO https://raw.githubusercontent.com/NREL/EnergyPlus/3cf5e1c8e6944e8a7760b80078c6945073cc8364/cmake/qtifw/install_script.qs;
  sudo hdiutil attach $ENERGYPLUS_DOWNLOAD_FILENAME.$EXT; sudo /Volumes/$ENERGYPLUS_DOWNLOAD_FILENAME/$ENERGYPLUS_DOWNLOAD_FILENAME.app/Contents/MacOS/$ENERGYPLUS_DOWNLOAD_FILENAME
  --verbose --script install_script.qs; sudo tar zxvf $ATTCHNUM.zip -C /Applications/EnergyPlus-$ENERGYPLUS_INSTALL_VERSION/PreProcess;
  sudo chmod -R a+rwx /Applications/EnergyPlus-$ENERGYPLUS_INSTALL_VERSION/PreProcess/IDFVersionUpdater;
  sudo chmod -R a+rwx /Applications/EnergyPlus-$ENERGYPLUS_INSTALL_VERSION/ExampleFiles; sudo rm
  $ENERGYPLUS_DOWNLOAD_FILENAME.$EXT;
  sudo rm $ATTCHNUM.zip;
  fi
- if [ "$TRAVIS_OS_NAME" == "windows" ]; then curl -0 https://raw.githubusercontent.com/NREL/EnergyPlus/3cf5e1c8e6944e8a7760b80078c6945073cc8364/cmake/qtifw/install_script.qs -o install_script.qs;
  $ENERGYPLUS_DOWNLOAD_FILENAME.$EXT --verbose --script install_script.qs; dir;
  DEST=C:\\EnergyPlusV$ENERGYPLUS_INSTALL_VERSION\\PreProcess\IDFVersionUpdater; echo "Extracting and Copying files to
  ..."; echo $DEST;
  powershell -command Expand-Archive -Path $ATTCHNUM.zip -DestinationPath $DEST -Force; fi
- curl -SL https://repo.anaconda.com/miniconda/Miniconda3-$MINICONDA_VERSION-$MINICONDA_OS-x86_64.sh -o miniconda.sh
- bash miniconda.sh -b -p $HOME/miniconda
- source $HOME/miniconda/etc/profile.d/conda.sh
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda;
- conda info -a
- conda env update -q -n test-env python=$TRAVIS_PYTHON_VERSION -f environment.yml
- conda activate test-env
- python --version
install:
- pip3 install --upgrade pip
- pip3 install --upgrade setuptools
- pip3 install .[dev]
after_success:
- coverage report -m
- coveralls
script: echo "Running Tests ..." # stage: test